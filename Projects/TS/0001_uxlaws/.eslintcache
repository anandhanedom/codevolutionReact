[{"/home/anandhan/Desktop/PROJECTS/codevolutionReact/Projects/TS/0001_uxlaws/src/reportWebVitals.ts":"1","/home/anandhan/Desktop/PROJECTS/codevolutionReact/Projects/TS/0001_uxlaws/src/components/navbar/navbar.component.tsx":"2","/home/anandhan/Desktop/PROJECTS/codevolutionReact/Projects/TS/0001_uxlaws/src/components/articleHero/articleHero.component.tsx":"3","/home/anandhan/Desktop/PROJECTS/codevolutionReact/Projects/TS/0001_uxlaws/src/pages/article/article.pages.tsx":"4","/home/anandhan/Desktop/PROJECTS/codevolutionReact/Projects/TS/0001_uxlaws/src/components/articleFooter/articleFooter.component.tsx":"5"},{"size":425,"mtime":1611033175138,"results":"6","hashOfConfig":"7"},{"size":1640,"mtime":1611569613529,"results":"8","hashOfConfig":"7"},{"size":987,"mtime":1611598709571,"results":"9","hashOfConfig":"7"},{"size":6816,"mtime":1611601262246,"results":"10","hashOfConfig":"7"},{"size":534,"mtime":1611596995093,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"8khea9",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/anandhan/Desktop/PROJECTS/codevolutionReact/Projects/TS/0001_uxlaws/src/reportWebVitals.ts",["23"],"/home/anandhan/Desktop/PROJECTS/codevolutionReact/Projects/TS/0001_uxlaws/src/components/navbar/navbar.component.tsx",[],"/home/anandhan/Desktop/PROJECTS/codevolutionReact/Projects/TS/0001_uxlaws/src/components/articleHero/articleHero.component.tsx",[],"/home/anandhan/Desktop/PROJECTS/codevolutionReact/Projects/TS/0001_uxlaws/src/pages/article/article.pages.tsx",["24"],"/* eslint-disable react/self-closing-comp */\nimport React, { useState } from 'react';\nimport { RouteComponentProps, Link } from 'react-router-dom';\n\n// Components\nimport NavBar from '../../components/navbar/navbar.component';\nimport SideNav from '../../components/sideNav/sidenav.component';\nimport ArticleHero from '../../components/articleHero/articleHero.component';\nimport ArticleFooter from '../../components/articleFooter/articleFooter.component';\n\n// Articles JSON\nimport articlesJSON from '../../articles.json';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface IProps extends RouteComponentProps<{ id: string }> {}\n\ninterface IArticle {\n  id: number;\n  color: string;\n  info: string;\n  takeaways: string[];\n  origins: string;\n  title: string;\n}\n\nconst Articles: React.FC<IProps> = ({ match }) => {\n  const [showNav, setShowNav] = useState(false);\n\n  const toggleNav = () => {\n    setShowNav(!showNav);\n  };\n\n  const currentArticle: IArticle = articlesJSON[+match.params.id - 1];\n\n  console.log(currentArticle);\n\n  return (\n    <div className=\"font-body bg-black\" style={{ color: '#f4f1d0' }}>\n      {showNav ? (\n        <SideNav toggleNav={toggleNav} />\n      ) : (\n        <div className=\"bg-black\" style={{ color: '#fff' }}>\n          <NavBar toggleNav={toggleNav} articleNav />\n          <div\n            className=\"py-28\"\n            style={{\n              background: currentArticle.color,\n            }}\n          >\n            <ArticleHero id={currentArticle.id} title={currentArticle.title} />\n          </div>\n        </div>\n      )}\n      {showNav ? null : (\n        <div>\n          <div className=\"container mx-auto px-4\">\n            <div className=\"py-10 max-w-5xl mx-auto\">\n              <h2 className=\"mb-8\">\n                <span\n                  style={{\n                    height: '1px',\n                    backgroundColor: '#f4f1d0',\n                  }}\n                  className=\"inline-block w-5 align-middle\"\n                ></span>\n                &nbsp;\n                <span className=\"ml-1 uppercase tracking-widest text-sm\">\n                  Overview\n                </span>\n              </h2>\n              <p className=\"text-xl leading-6\tsm:text-4xl font-bold text-left pr-5\">\n                {currentArticle.info}\n              </p>\n            </div>\n            <div className=\"py-10 max-w-5xl mx-auto\">\n              <h2 className=\"mb-8\">\n                <span\n                  style={{\n                    height: '1px',\n                    backgroundColor: '#f4f1d0',\n                  }}\n                  className=\"inline-block w-5 align-middle\"\n                ></span>\n                &nbsp;\n                <span className=\"ml-1 uppercase tracking-widest text-sm\">\n                  Key Takeaways\n                </span>\n              </h2>\n              <div className=\"mb-20 leading-8\ttext-left flex justify-between text-xl font-medium flex-wrap sm:flex-nowrap\">\n                {currentArticle.takeaways.map((takeaway, i) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <p key={i} className=\"pb-5 sm:min-w-1/3 pr-10\">\n                    {takeaway}\n                  </p>\n                ))}\n              </div>\n              <Link\n                className=\"text-center uppercase px-10 py-4 font-semibold tracking-widest mx-auto block md:inline md:mx-0\"\n                to=\"/\"\n                style={{ background: currentArticle.color }}\n              >\n                Download The Poster\n              </Link>\n            </div>\n            <div className=\"pb-10 pt-20 max-w-5xl mx-auto\">\n              <h2 className=\"mb-8\">\n                <span\n                  style={{\n                    height: '1px',\n                    backgroundColor: '#f4f1d0',\n                  }}\n                  className=\"inline-block w-5 align-middle\"\n                ></span>\n                &nbsp;\n                <span className=\"ml-1 uppercase tracking-widest text-sm\">\n                  Origins\n                </span>\n              </h2>\n              <div className=\"leading-8\ttext-left text-xl font-medium\">\n                {currentArticle.origins}\n                <p className=\"mt-4\">\n                  <u>Source</u>\n                </p>\n              </div>\n            </div>\n            <div className=\"pb-10 pt-20 max-w-5xl mx-auto\">\n              <h2 className=\"mb-8\">\n                <span\n                  style={{\n                    height: '1px',\n                    backgroundColor: '#f4f1d0',\n                  }}\n                  className=\"inline-block w-5 align-middle\"\n                ></span>\n                &nbsp;\n                <span className=\"ml-1 uppercase tracking-widest text-sm\">\n                  Further Reading\n                </span>\n              </h2>\n              <div className=\"mb-20 leading-8\ttext-left text-xl font-medium\">\n                <ul>\n                  <li className=\"mb-10\">\n                    <h2 className=\"font-bold text-4xl mb-2\">\n                      <u>The Aesthetic-Usability Effect</u>\n                    </h2>\n                    <p>Kate Moran | Nielsen Norman group</p>\n                  </li>\n                  <li className=\"mb-10\">\n                    <h2 className=\"font-bold text-4xl mb-2\">\n                      <u>Aesthetic-Usability Effect</u>\n                    </h2>\n                    <p>Wikipedia</p>\n                  </li>\n                  <li className=\"mb-10\">\n                    <h2 className=\"font-bold text-4xl mb-2\">\n                      <u>\n                        The Aesthetic-Usability Effect: Why beautiful-looking\n                        products are preferred over usable-but-not-beautiful\n                        ones.\n                      </u>\n                    </h2>\n                    <p>Abhishek Chakraborty | Medium</p>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          {currentArticle.id < articlesJSON.length ? (\n            <div\n              style={{\n                background: articlesJSON[+match.params.id].color,\n              }}\n            >\n              <div className=\"container mx-auto px-4\">\n                <ArticleFooter\n                  nextId={articlesJSON[+match.params.id].id}\n                  title={articlesJSON[+match.params.id].title}\n                />\n              </div>\n            </div>\n          ) : (\n            <div\n              style={{\n                background: articlesJSON[0].color,\n              }}\n            >\n              <div className=\"container mx-auto px-4\">\n                <ArticleFooter nextId={1} title={articlesJSON[0].title} />\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Articles;\n","/home/anandhan/Desktop/PROJECTS/codevolutionReact/Projects/TS/0001_uxlaws/src/components/articleFooter/articleFooter.component.tsx",[],{"ruleId":"25","severity":1,"message":"26","line":3,"column":25,"nodeType":"27","messageId":"28","endLine":3,"endColumn":57},{"ruleId":"29","severity":1,"message":"30","line":35,"column":3,"nodeType":"31","messageId":"32","endLine":35,"endColumn":14},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","no-console","Unexpected console statement.","MemberExpression","unexpected"]